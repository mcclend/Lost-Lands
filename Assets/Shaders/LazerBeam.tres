[gd_resource type="ShaderMaterial" load_steps=8 format=2]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;
uniform sampler2D NOISE_PATTERN1;
uniform sampler2D NOISE_PATTERN2;
uniform sampler2D TRANSPARENCY_VARIATION;
uniform vec2 scroll1 = vec2(-1.0, 0);
uniform vec2 scroll2 = vec2(-0.2, 0);

uniform vec4 color1 : hint_color;
uniform vec4 color2 : hint_color;
uniform float colorMixFactor : hint_range(0, 10) = 1;
uniform float glowFactor = 2.5;



uniform float speed : hint_range(0.0, 1.0) = 0.5;
uniform float xStretch = 1.0;
uniform float yStretch = 0.1;

uniform float minAlpha = 0.3;

uniform float lazerSize : hint_range(0.0, 1.0) = 0.5;
uniform float wobbliness : hint_range(0, 1) = 0.1;

void fragment(){
	vec2 stretchedUV = UV;
	stretchedUV.x *= xStretch;
	stretchedUV.y *= yStretch;
	
	float intensity1 = textureLod(NOISE_PATTERN1, stretchedUV + TIME * scroll1 * speed, 0.0).r;
	float intensity2 = textureLod(NOISE_PATTERN2, stretchedUV + TIME * scroll2 * speed, 0.0).r;
	float intensity  = intensity1 * intensity2;
	
	float centrality = (1.0 - abs(UV.y - 0.5)) * 0.5;
	if (wobbliness * intensity + (1.0 - wobbliness) * centrality > 1.0 - lazerSize){
		intensity *= centrality;
		COLOR = mix(color1, color2, clamp(intensity * colorMixFactor, 0.0, 1.0)) * glowFactor;
		
		float alpha = textureLod(TRANSPARENCY_VARIATION, stretchedUV + TIME * scroll1 * speed, 0.0).r;
		COLOR.a = minAlpha + alpha * (1.0 - minAlpha);
	}
	
}


"

[sub_resource type="OpenSimplexNoise" id=8]
period = 94.7
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=9]
bump_strength = 7.3
noise = SubResource( 8 )

[sub_resource type="OpenSimplexNoise" id=10]
period = 93.0
persistence = 1.0
lacunarity = 2.93

[sub_resource type="NoiseTexture" id=11]
width = 1024
height = 256
seamless = true
noise = SubResource( 10 )

[sub_resource type="OpenSimplexNoise" id=14]
octaves = 4
period = 46.0
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=15]
width = 1024
height = 1024
noise = SubResource( 14 )
noise_offset = Vector2( 0, 5 )

[resource]
shader = SubResource( 7 )
shader_param/scroll1 = Vector2( -1, 0 )
shader_param/scroll2 = Vector2( -0.2, 0 )
shader_param/color1 = Color( 1, 0, 0, 1 )
shader_param/color2 = Color( 1, 1, 1, 1 )
shader_param/colorMixFactor = 0.722
shader_param/glowFactor = 4.327
shader_param/speed = 0.85
shader_param/xStretch = 1.143
shader_param/yStretch = 0.1
shader_param/minAlpha = 0.399
shader_param/lazerSize = 0.591
shader_param/wobbliness = 0.17
shader_param/NOISE_PATTERN1 = SubResource( 9 )
shader_param/NOISE_PATTERN2 = SubResource( 11 )
shader_param/TRANSPARENCY_VARIATION = SubResource( 15 )
